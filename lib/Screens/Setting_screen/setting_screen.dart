import 'dart:io';

import 'package:bashakam_barawzanko/components/setting_card.dart';
import 'package:bashakam_barawzanko/constantes/them_colors.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:pull_down_button/pull_down_button.dart';

class SettingScreen extends StatelessWidget {
  const SettingScreen({super.key});

  @override
  Widget build(BuildContext context) {
    if (Platform.isIOS) {
      return const IOSHomePage();
    }

    // For Android or unsupported platforms, return the Android setting screen
    return const AndroidSettingScreen();
  }
}

class AndroidSettingScreen extends StatefulWidget {
  const AndroidSettingScreen({super.key});

  @override
  State<AndroidSettingScreen> createState() => _AndroidSettingScreenState();
}

class _AndroidSettingScreenState extends State<AndroidSettingScreen> {
  @override
  Widget build(BuildContext context) {
    final List<String> items = [
      'Ø¨Û•Ù¾ÛŽÛŒ Ø³ÛŒØ³ØªÛ•Ù…',
      'Ø¯Û†Ø®ÛŒ Ú•ÙˆÙˆÙ†Ø§Ú©',
      'Ø¯Û†Ø®ÛŒ ØªØ§Ø±ÛŒÚ©',
    ];
    String? selectedItem = 'Ø¨Û•Ù¾ÛŽÛŒ Ø³ÛŒØ³ØªÛ•Ù…';

    return Scaffold(
      backgroundColor: ThemeColors.kBodyColor,
      body: Padding(
        padding: const EdgeInsets.all(18),
        child: ListView(
          children: [
            const Text(
              'Ú•ÙˆÙˆÚ©Ø§Ø±',
              style: TextStyle(
                color: ThemeColors.kblueColor,
                fontSize: 14,
              ),
            ),
            const SizedBox(height: 25),
            const Text(
              'Ø¨Ø§Ø±ÛŒ Ú•ÙˆÙˆÙ†Ø§Ú©ÛŒ',
              style: TextStyle(
                color: ThemeColors.kBodyTextColor,
                fontSize: 16,
              ),
            ),
            Theme(
              data: Theme.of(context).copyWith(
                canvasColor: ThemeColors.kMyCardColor,
              ),
              child: DropdownButton<String>(
                value: selectedItem,
                onChanged: (String? newValue) {
                  setState(() {
                    selectedItem = newValue;
                  });
                },
                items: items.map<DropdownMenuItem<String>>((String value) {
                  return DropdownMenuItem<String>(
                    value: value,
                    child: Text(
                      value,
                      style: const TextStyle(
                        color: ThemeColors.kLightGreyTextColor,
                        fontSize: 14,
                      ),
                    ),
                  );
                }).toList(),
                iconSize: 25,
                iconEnabledColor: ThemeColors.kLightGreyTextColor,
                underline: const SizedBox(),
              ),
            ),
            const SizedBox(height: 30),
            const Text(
              'Ø¯Û•Ø±Ø¨Ø§Ø±Û•',
              style: TextStyle(
                color: ThemeColors.kblueColor,
                fontSize: 14,
              ),
            ),
            const SizedBox(height: 25),
            SettingCard(
              title: 'Ø¯Û•Ø±Ø¨Ø§Ø±Û•ÛŒ Ø¨Û•Ø´Û•Ú©Û•Ù…',
              subTitle: 'Ù…Ù† Ú©ÛŽÙ… Ùˆ Ø¨Û†Ú†ÛŒ Ø¦Û•Ù¾ÚµÛŒÚ©Û•ÛŒØ´Ù†ÛŒ Ø¨Û•Ø´Û•Ú©Û•Ù…Ù… Ø¯Ø±ÙˆÙˆØ³Øª Ú©Ø±Ø¯ØŸ',
              onTap: () {},
            ),
            const SizedBox(height: 44),
            const Text(
              'Ø²ÛŒØ§ØªØ±',
              style: TextStyle(
                color: ThemeColors.kblueColor,
                fontSize: 14,
              ),
            ),
            const SizedBox(height: 25),
            SettingCard(
              title: 'Ù¾Û•ÛŒÙˆÛ•Ù†Ø¯ÛŒ',
              subTitle: 'Ù¾Û•ÛŒÙˆÛ•Ù†Ø¯ÛŒ Ø¨Û• Ú¯Û•Ø´Û•Ù¾ÛŽØ¯Û•Ø±Û•ÙˆÛ• Ø¨Ú©Û• ',
              onTap: () {},
            ),
            const SizedBox(height: 25),
            SettingCard(
              title: 'Ù‡Û•ÚµØ³Û•Ù†Ú¯Ø§Ù†Ø¯Ù†',
              subTitle: 'Ù‡Û•ÚµØ³Û•Ù†Ú¯Ø§Ù†Ø¯Ù†Øª Ø¨Û•Ø±Ø² Ø¯Û•Ù†Ø±Ø®ÛŽÙ†Ù… ðŸ’™',
              onTap: () {},
            ),
            const SizedBox(height: 25),
            SettingCard(
              title: 'Ù‡Ø§ÙˆØ¨Û•Ø´ÛŒ Ø¨Ú©Û•',
              subTitle: 'Ù„Û•Ú¯Û•Úµ Ù‡Ø§ÙˆÙ¾Û†Ù„ Ùˆ Ù‡Ø§ÙˆÚ•ÛŽÚ©Ø§Ù†Øª Ù‡Ø§ÙˆØ¨Û•Ø´ÛŒ Ù¾ÛŽØ¨Ú©Û•',
              onTap: () {},
            ),
          ],
        ),
      ),
    );
  }
}

class IOSHomePage extends StatefulWidget {
  const IOSHomePage({super.key});

  @override
  State<IOSHomePage> createState() => _IOSHomePageState();
}

class _IOSHomePageState extends State<IOSHomePage> {
  @override
  Widget build(BuildContext context) {
    int selectedValue = 0;

    return CupertinoTheme(
      data: const CupertinoThemeData(
        brightness: Brightness.dark, // Set to dark mode
        primaryColor: Colors.black, // Customize primary color
        scaffoldBackgroundColor:
            Colors.black, // Customize scaffold background color
        // Add more customizations as needed
      ),
      child: CupertinoPageScaffold(
        child: CupertinoListSection.insetGrouped(
          backgroundColor: ThemeColors.kBodyColor,
          header: const Text(
            'Ú•ÙˆÙˆÚ©Ø§Ø±',
            style: TextStyle(
              color: ThemeColors.kBodyTextColor,
              fontFamily: "rabarBold",
              fontWeight: FontWeight.w100,
            ),
          ),
          children: [
            CupertinoListTile.notched(
              backgroundColor: ThemeColors.kMyCardColor,
              backgroundColorActivated: ThemeColors.kLightGreyTextColor,
              title: const Text('Open pull request'),
              leading: const Icon(
                CupertinoIcons.paintbrush,
                color: ThemeColors.kBodyTextColor,
              ),
              trailing: const Icon(
                CupertinoIcons.ellipsis_circle,
                color: ThemeColors.kblueColor,
              ),
              onTap: () {},
            ),
          ],
        ),
      ),
    );
  }
}
